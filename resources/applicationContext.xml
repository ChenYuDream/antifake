<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.sinosoft.antifake">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="dataSource" ref="dataSource"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="packagesToScan" value="com.sinosoft.antifake"/>
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
			</props>
		</property>
	</bean>
	
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="org.springside.modules.persistence.Hibernates">
				<constructor-arg ref="dataSource"/>
			</bean>
		</property>
	</bean>

	<!-- Spring Data Jpa配置 -->
 	<jpa:repositories base-package="com.sinosoft.antifake"  transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>
   
	<!-- 事务管理器配置, Jpa单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<!-- spring jdbc 定义  -->
	<bean id = "jdbcTemplate"   
         class = "org.springframework.jdbc.core.JdbcTemplate">   
         <property name = "dataSource" ref="dataSource"/>   
    </bean>
	<bean id="namedParamJdbcTemplate" 
	      class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
	      <constructor-arg ref="quartzDataSource"/>
	</bean>
	
	<!-- IBATIS 定义 -->
	<bean id="sqlMapClient" 
		class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation"><value>classpath:/sql-map-config.xml</value></property>
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<import resource="application-dao.xml"/>
	<!-- IBATIS END -->

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- JSR303 Validator定义 -->
 	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	
	<!-- 验证码 start-->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.image.width">250</prop>
						<prop key="kaptcha.textproducer.font.size">90</prop>
						<prop key="kaptcha.image.height">90</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.char.string">0123456789</prop>
						<prop key="kaptcha.textproducer.font.names">Arial,Courier</prop>
						<prop key="kaptcha.obscurificator.impl">com.sinosoft.antifake.helpers.kaptcha.NoGimpy</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	<!-- 验证码 end-->
	
	<!-- production环境 -->
	
	<!-- local development环境 -->
	<beans profile="development">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.development.properties" />	

		<!-- DBCP连接池 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="true" />
			<property name="testOnBorrow" value="true"/> 
			<property name="validationQuery" value="SELECT 1 FROM syncUser"/> 
		</bean>
		<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		  <property name="username" value="${jdbc.username}"></property>
		  <property name="password" value="${jdbc.password}"></property>
		  <property name="url" value="${jdbc.url}"></property>
		  <property name="driverClassName" value="${jdbc.driver}"></property>
		  <property name="defaultAutoCommit" value="true" />
		  <property name="initialSize" value="${connection.initialSize}"></property>
		  <property name="maxActive" value="${connection.maxActive}"></property>
		  <property name="maxIdle" value="${connection.maxIdle}"></property>
		  <property name="minIdle" value="${connection.minIdle}"></property>
		  <property name="maxWait" value="${connection.maxWait}"></property>
		  <property name="removeAbandoned" value="${connection.removeAbandoned}"></property>
		  <property name="removeAbandonedTimeout" value="${connection.removeAbandonedTimeout}"></property>
		  <property name="logAbandoned" value="${connection.logAbandoned}"></property>
		  
		  <property name="testOnBorrow" value="true"/> 
		  <property name="validationQuery" value="SELECT 1 FROM syncUser"/> 
		 </bean> -->
		
	</beans>
	

	
</beans>